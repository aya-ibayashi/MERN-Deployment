{"version":3,"sources":["views/dashboard.js","views/createPirate.js","views/pirateInfo.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","useState","list","setList","loaded","setLoaded","useEffect","axios","get","then","res","data","catch","err","console","log","style","backgroundColor","paddingBottom","display","justifyContent","color","height","marginTop","marginLeft","to","map","pirate","width","margin","key","_id","src","marginRight","name","onClick","e","id","delete","CreatePirate","errors","setErrors","image","treasureChests","catchPhrase","crewPosition","pegLeg","eyePatch","hookHand","formState","setFormState","changeHandler","target","value","clickHandler","onSubmit","preventDefault","post","newPirate","navigate","errorResponse","response","errorArr","Object","keys","push","message","i","onChange","type","checked","PirateInfo","setPirate","p","accessory","put","alt","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4dbfd3ad.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {Link} from '@reach/router'\r\n\r\nconst Dashboard = () =>{\r\n\r\n    const [list, setList] = useState([])\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pirates\")\r\n            .then(res=>{\r\n                setList(res.data);\r\n                setLoaded(true)})\r\n            .catch(err=>console.log(err))\r\n    }, [])\r\n\r\n    if (loaded === false){\r\n        return \"Loading...\"\r\n    }\r\n    \r\n    const deletePirate = (e, id) =>{\r\n        axios.delete(\"http://localhost:8000/api/pirates/\" + id)\r\n            .then( () => {\r\n                axios.get(\"http://localhost:8000/api/pirates\")\r\n                    .then(res=>{\r\n                        setList(res.data);\r\n                        setLoaded(true)})\r\n                    .catch(err=>console.log(err))}\r\n                )\r\n            .catch(\r\n                err=>console.log(err)\r\n            )\r\n    }\r\n\r\n    return (\r\n            <div style={{backgroundColor:\"#FF9900\", paddingBottom:\"10px\"}}>\r\n                <div style={{backgroundColor:\"brown\", display:\"flex\", justifyContent:\"center\"}}>\r\n                    <h1 style={{color:\"white\"}}>Pirate Crew</h1>\r\n                    <button style={{height:30, backgroundColor:\"lightBlue\", marginTop:\"30px\", marginLeft:\"10px\"}}><Link to=\"pirates/new\">Add Pirate</Link></button>\r\n                </div>\r\n                {list.map((pirate)=>(\r\n                    <div style={{backgroundColor:\"white\", width:\"500px\", margin:\"15px auto\", display:\"flex\", justifyContent:\"center\"}} key={pirate._id}>\r\n                        <img src=\"https://tse1.mm.bing.net/th?id=OIP.czTfyK62TL8mDde5IA3FFQHaEw&pid=Api\" style={{height:\"45px\", width:\"auto\", marginTop:\"20px\", marginRight:\"10px\"}}/>\r\n                        <div>\r\n                            <h3>{pirate.name}</h3>\r\n                            <button style={{backgroundColor:\"lightGreen\"}}>\r\n                                <Link to={`/pirates/${pirate._id}`}>View Pirate</Link>\r\n                            </button>\r\n                            <button style={{backgroundColor:\"red\"}} onClick={(e)=>deletePirate(e, pirate._id)}>Walk the Plank</button>\r\n                         </div>   \r\n                    </div>\r\n                ))}\r\n            </div> \r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard","import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport { navigate, Link } from '@reach/router'\r\n\r\nconst CreatePirate = () =>{\r\n\r\n    const [errors, setErrors] = useState(0)\r\n\r\n    const [formState, setFormState] = useState({\r\n        name:\"\",\r\n        image:\"\",\r\n        treasureChests:\"1\",\r\n        catchPhrase:\"\",\r\n        crewPosition:\"Captain\",\r\n        pegLeg: true,\r\n        eyePatch: true,\r\n        hookHand: true\r\n    })\r\n\r\n    const changeHandler = (e) => {\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name] : e.target.value\r\n        })\r\n        console.log(formState)\r\n    }\r\n\r\n    const clickHandler = e => {\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name] : !formState[e.target.name]\r\n        })\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:8000/api/pirates/create\", formState)\r\n            .then(newPirate=> navigate('/pirates/'+ newPirate.data._id))\r\n            .catch(err=>{\r\n                const errorResponse = err.response.data.errors;\r\n                const errorArr = [];\r\n                for (const key of Object.keys(errorResponse)){\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{backgroundColor:\"brown\", display:\"flex\", justifyContent:\"center\"}}>\r\n                <h1 style={{color:\"white\"}}>Add Pirate</h1>\r\n                <button style={{height:30, backgroundColor:\"lightBlue\", marginTop:\"30px\", marginLeft:\"10px\"}}><Link to=\"/\">Crew Board</Link></button>\r\n            </div>    \r\n            <form style={{ backgroundColor:\"#FF9900\"}} onSubmit= {submitHandler}>\r\n                {errors !== 0 && errors.map((err, i)=>\r\n                    <p style={{color:\"red\"}} key={i}>{err}</p>\r\n                )}\r\n                <div>\r\n                    <label>Pirate Name:</label>\r\n                    <input name=\"name\" value={formState.name}  onChange={changeHandler}/>\r\n                </div>\r\n                <div>\r\n                    <label>Image URL:</label>\r\n                    <input name=\"image\" value={formState.image} onChange={changeHandler} />\r\n                </div>\r\n                <div>\r\n                    <label>Number of Treasure Chests:</label>\r\n                    <select onChange={changeHandler} value={formState.treasureChests} name=\"treasureChests\">\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"6\">6</option>\r\n                        <option value=\"7\">7</option>\r\n                        <option value=\"8\">8</option>\r\n                        <option value=\"9\">9</option>\r\n                        <option value=\"10\">10</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>Pirate Catch Phrase:</label>\r\n                    <input name=\"catchPhrase\" value={formState.catchPhrase} onChange={changeHandler} />\r\n                </div>\r\n                <div>\r\n                    <label>Crew Position:</label>\r\n                    <select onChange={changeHandler} value={formState.crewPosition} name=\"crewPosition\">\r\n                        <option value=\"Captain\">Captain</option>\r\n                        <option value=\"First Mate\">First Mate</option>\r\n                        <option value=\"Quarter Master\">Quarter Master</option>\r\n                        <option value=\"Bootswain\">Bootswain</option>\r\n                        <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <input type=\"checkbox\" name=\"pegLeg\" checked={formState.pegLeg} onChange = {clickHandler} />\r\n                        <label>Peg Leg</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"checkbox\" name=\"eyePatch\" checked={formState.eyePatch} onChange = {clickHandler} />\r\n                        <label>Eye Patch</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"checkbox\" name=\"hookHand\" checked={formState.hookHand} onChange = {clickHandler} />\r\n                        <label>Hook Hand</label>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Add Pirate\"/>\r\n            </form>\r\n\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default CreatePirate","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from '@reach/router'\r\n\r\nconst PirateInfo = ({id}) =>{\r\n\r\n    const [pirate, setPirate] = useState({})\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pirates/\"+id)\r\n            .then(p=>{console.log(p.data);\r\n                setPirate(p.data);\r\n                setLoaded(true)})\r\n            .catch(err=>console.log(err))\r\n    }, [id])\r\n\r\n    if (loaded === false){\r\n        return \"Loading...\"\r\n    }\r\n\r\n    const clickHandler = (e, accessory) => {\r\n        axios.put(\"http://localhost:8000/api/pirates/update/\"+ id, \r\n                {[accessory]: !pirate[accessory]})\r\n            .then(()=> {\r\n                axios.get(\"http://localhost:8000/api/pirates/\"+id)\r\n                .then(p=>{\r\n                    console.log(p.data);\r\n                    setPirate(p.data);\r\n                    setLoaded(true)})\r\n                .catch(err=>console.log(err))})\r\n            .catch(err=>console.log(err));\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <div style={{backgroundColor:\"brown\", display:\"flex\", justifyContent:\"center\"}}>\r\n                <h1 style={{color:\"white\"}}>{pirate.name}</h1>\r\n                <button  style={{height:30, backgroundColor:\"lightBlue\", marginTop:\"30px\", marginLeft:\"10px\"}}><Link to=\"/\">Crew Board</Link></button>\r\n            </div> \r\n            <div style={{display:\"flex\", backgroundColor:\"#FF9900\"}}>\r\n                <div>\r\n                    <img src={pirate.image} alt=\"image of pirate\"/>\r\n                    <h2>{pirate.catchPhrase}</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>About</h2>\r\n                    <p>Position: {pirate.crewPosition}</p>\r\n                    <p>Treasures: {pirate.treasureChests}</p>\r\n                    <p>Peg Leg: {pirate.pegLeg === true ? \"Yes\" : \"No\"} \r\n                        <button style={{backgroundColor: pirate.pegLeg === true? \"red\" : \"green\" }} name=\"pegLeg\" onClick = {e=>clickHandler(e,\"pegLeg\")}>{pirate.pegLeg === true ? \"No\" : \"Yes\"} </button> </p>\r\n                    <p>Eye Patch: {pirate.eyePatch === true ? \"Yes\" : \"No\"}\r\n                        <button style={{backgroundColor: pirate.eyePatch === true? \"red\" : \"green\" }} name=\"eyePatch\" onClick = {e=>clickHandler(e,\"eyePatch\")}>{pirate.eyePatch === true ? \"No\" : \"Yes\"} </button>\r\n                    </p>\r\n                    <p>Hook Hand: {pirate.hookHand === true ? \"Yes\" : \"No\"}\r\n                        <button style={{backgroundColor: pirate.hookHand === true? \"red\" : \"green\" }} name=\"hookHand\" onClick = {e=>clickHandler(e,\"hookHand\")}>{pirate.hookHand === true ? \"No\" : \"Yes\"} </button>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default PirateInfo","import React from 'react';\nimport './App.css';\nimport { Router } from '@reach/router'\nimport Test from '../src/views/test'\nimport Dashboard from '../src/views/dashboard'\nimport CreatePirate from '../src/views/createPirate'\nimport  PirateInfo from '../src/views/pirateInfo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Dashboard path=\"/\"/>\n        <PirateInfo path=\"/pirates/:id\"/>\n        <CreatePirate path=\"/pirates/new\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}